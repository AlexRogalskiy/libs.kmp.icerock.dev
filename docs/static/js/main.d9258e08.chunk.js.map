{"version":3,"sources":["index.js"],"names":["Copyright","variant","color","align","href","Date","getFullYear","useStyles","makeStyles","theme","icon","marginRight","spacing","heroContent","backgroundColor","palette","background","paper","padding","heroButtons","marginTop","cardGrid","paddingTop","paddingBottom","card","height","display","flexDirection","cardMedia","cardContent","flexGrow","footer","SubmitButton","style","margin","width","target","Body","props","state","libraries","selectedKotlinVersion","selectedCategory","selectedTarget","fetch","then","response","json","setState","catch","error","containerButtons","containerGrid","this","container","kotlinVersions","flatMap","library","versions","map","libraryVersion","kotlin","filter","v","i","a","indexOf","categories","category","targets","Object","values","filterLibraries","newLib","assign","version","includes","lib","length","filterStyle","minWidth","className","classes","justify","item","id","value","onChange","event","newState","labelWidth","items","sort","b","github","stars_count","latestVersion","keys","key","platform","join","xs","sm","gutterBottom","component","name","description","path","size","html_url","maxWidth","paragraph","React","Component","ReactDOM","Fragment","document","querySelector"],"mappings":"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","file":"static/js/main.d9258e08.chunk.js","sourcesContent":["/*\n * Copyright 2020 IceRock MAG Inc. Use of this source code is governed by the Apache 2.0 license.\n */\n\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Link from '@material-ui/core/Link';\nimport * as ReactDOM from \"react-dom\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright Â© '}\n      <Link color=\"inherit\" href=\"https://icerock.dev/\">\n        IceRock Development\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles(theme => ({\n  icon: {\n    marginRight: theme.spacing(2),\n  },\n  heroContent: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(8, 0, 6),\n  },\n  heroButtons: {\n    marginTop: theme.spacing(4),\n  },\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8),\n  },\n  card: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  cardMedia: {\n    paddingTop: '56.25%', // 16:9\n  },\n  cardContent: {\n    flexGrow: 1,\n  },\n  footer: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(6),\n  },\n}));\n\nfunction SubmitButton() {\n  let style = {\n    margin: \"0 auto 16px\",\n    width: \"fit-content\",\n    display: \"block\"\n  };\n  return <Button\n    variant=\"contained\"\n    color=\"primary\"\n    style={style}\n    href=\"https://github.com/icerockdev/multiplatform-libraries#how-to-add-own-lib\"\n    target=\"_blank\"\n  >\n    Submit library\n  </Button>;\n}\n\nclass Body extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      libraries: null,\n      selectedKotlinVersion: null,\n      selectedCategory: null,\n      selectedTarget: null\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"data.json\")\n      .then(response => response.json())\n      .then(libraries => {\n        this.setState({libraries: libraries});\n      })\n      .catch(error => {\n        // let textNode = document.createTextNode(error);\n        // content.appendChild(textNode);\n      });\n  }\n\n  render() {\n    const libraries = this.state.libraries;\n    const handleKotlinVersionChange = event => {\n      let newState = this.state;\n      newState.selectedKotlinVersion = event.target.value;\n      this.setState(newState);\n    };\n    const handleCategoryChange = event => {\n      let newState = this.state;\n      newState.selectedCategory = event.target.value;\n      this.setState(newState);\n    };\n    const handleTargetChange = event => {\n      let newState = this.state;\n      newState.selectedTarget = event.target.value;\n      this.setState(newState);\n    };\n\n    let containerButtons;\n    let containerGrid;\n    if (libraries == null) {\n      containerButtons = <div/>;\n      containerGrid = <Grid container spacing={4}/>;\n    } else {\n      let kotlinVersions = libraries\n        .flatMap(library => library.versions)\n        .map(libraryVersion => libraryVersion.kotlin)\n        .filter((v, i, a) => a.indexOf(v) === i);\n      let categories = libraries\n        .map(library => library.category)\n        .filter((v, i, a) => a.indexOf(v) === i);\n      let targets = libraries\n        .flatMap(library => library.versions)\n        .flatMap(libraryVersion => Object.values(libraryVersion.targets))\n        .map(target => target.target)\n        .filter((v, i, a) => a.indexOf(v) === i);\n\n      let category = this.state.selectedCategory;\n      let kotlin = this.state.selectedKotlinVersion;\n      let target = this.state.selectedTarget;\n      let filterLibraries = libraries.filter(library => {\n        return category === \"\" || category == null || library.category === category;\n      }).map(library => {\n        let newLib = {};\n        Object.assign(newLib, library);\n        newLib.versions = library.versions.filter(version => {\n          return kotlin === \"\" || kotlin == null || version.kotlin === kotlin;\n        }).filter(version => {\n          return target == null || target === \"\" || Object.values(version.targets).map(target => target.target).includes(target);\n        });\n        return newLib;\n      }).filter(lib => lib.versions.length > 0);\n\n      let filterStyle = {\n        minWidth: 120\n      };\n      let resultsCountStyle = {\n        margin: \"16px auto 0\",\n        width: \"fit-content\"\n      };\n\n      containerButtons = <div className={this.props.classes.heroButtons}>\n        <SubmitButton/>\n        <Grid container spacing={2} justify=\"center\">\n          <Grid item>\n            <FormControl variant=\"outlined\" style={filterStyle}>\n              <InputLabel>Kotlin</InputLabel>\n              <Select\n                id=\"kotlin-version-selector\"\n                value={this.state.selectedKotlinVersion}\n                onChange={handleKotlinVersionChange}\n                labelWidth={120}\n              >\n                <MenuItem value=\"\">\n                  <em>None</em>\n                </MenuItem>\n                {kotlinVersions.map(version => <MenuItem value={version}>{version}</MenuItem>)}\n              </Select>\n            </FormControl>\n          </Grid>\n          <Grid item>\n            <FormControl variant=\"outlined\" style={filterStyle}>\n              <InputLabel>Category</InputLabel>\n              <Select\n                id=\"category-version-selector\"\n                value={this.state.selectedCategory}\n                onChange={handleCategoryChange}\n                labelWidth={120}\n              >\n                <MenuItem value=\"\">\n                  <em>None</em>\n                </MenuItem>\n                {categories.map(item => <MenuItem value={item}>{item}</MenuItem>)}\n              </Select>\n            </FormControl>\n          </Grid>\n          <Grid item>\n            <FormControl variant=\"outlined\" style={filterStyle}>\n              <InputLabel>Target</InputLabel>\n              <Select\n                id=\"target-version-selector\"\n                value={this.state.selectedTarget}\n                onChange={handleTargetChange}\n                labelWidth={120}\n              >\n                <MenuItem value=\"\">\n                  <em>None</em>\n                </MenuItem>\n                {targets.map(item => <MenuItem value={item}>{item}</MenuItem>)}\n              </Select>\n            </FormControl>\n          </Grid>\n        </Grid>\n        <Typography style={resultsCountStyle}>Results: {filterLibraries.length}</Typography>\n      </div>;\n\n      let items = filterLibraries\n        .sort((a, b) => {\n          if (a.github.stars_count === b.github.stars_count) return 0;\n          else if (a.github.stars_count > b.github.stars_count) return -1;\n          else return 1;\n        })\n        .map(library => {\n          let latestVersion = library.versions[library.versions.length - 1];\n          let platforms = Object.keys(latestVersion.targets)\n            .map(key => {\n              let target = latestVersion.targets[key];\n              if (target.target != null) return target.target;\n              else return target.platform;\n            })\n            .filter((v, i, a) => a.indexOf(v) === i);\n\n          let targets = platforms.join(\", \");\n\n          let descriptionStyle = {\n            margin: \"8px 0\"\n          };\n          let titleStyle = {\n            display: \"flex\",\n            \"justify-content\": \"space-between\"\n          };\n\n          return <Grid item key={library} xs={12} sm={6}>\n            <Card className={this.props.classes.card}>\n              <CardContent className={this.props.classes.cardContent}>\n                <Typography gutterBottom variant=\"h5\" component=\"h2\" style={titleStyle}>\n                  {library.github.name}\n                  <div>â {library.github.stars_count}</div>\n                </Typography>\n                <Typography style={descriptionStyle}>{library.github.description}</Typography>\n                <Typography>Category: {library.category}</Typography>\n                <Typography>Gradle: {library.path + \":\" + latestVersion.version}</Typography>\n                <Typography>Kotlin: {latestVersion.kotlin}</Typography>\n                <Typography>Targets: {targets}</Typography>\n              </CardContent>\n              <CardActions>\n                <Button size=\"small\" color=\"primary\" href={library.github.html_url} target={\"_blank\"}>\n                  GitHub\n                </Button>\n              </CardActions>\n            </Card>\n          </Grid>;\n        });\n\n      containerGrid = <Grid container spacing={4}>{items}</Grid>;\n    }\n\n    return (\n      <main>\n        {/* Hero unit */}\n        <div className={this.props.classes.heroContent}>\n          <Container maxWidth=\"sm\">\n            <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\n              Kotlin Multiplatform libraries\n            </Typography>\n            <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" paragraph>\n              Here is list of Kotlin Multiplatform libraries with auto-fetch information directly from maven\n              repositories.\n            </Typography>\n            {containerButtons}\n          </Container>\n        </div>\n        <Container className={this.props.classes.cardGrid} maxWidth=\"md\">\n          {/* End hero unit */}\n          {containerGrid}\n        </Container>\n      </main>\n    );\n  }\n}\n\nfunction App() {\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <CssBaseline/>\n      <Body classes={classes}/>\n      {/* Footer */}\n      <footer className={classes.footer}>\n        <Copyright/>\n      </footer>\n      {/* End footer */}\n    </React.Fragment>\n  );\n}\n\nReactDOM.render(<App/>, document.querySelector(\"#app\"));\n"],"sourceRoot":""}